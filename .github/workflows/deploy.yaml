name: Deployment

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    # TODO: update to cluster name
  GKE_ZONE: asia-south1-a   # TODO: update to cluster zone
  DEPLOYMENT_NAME: nginx # TODO: update to deployment name
  IMAGE: nginx

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v2
      with:
        version: 'latest'
        install_components: gke-gcloud-auth-plugin


    - uses: google-github-actions/auth@v2
      with: 
        project_id: ${{ secrets.GKE_PROJECT }}
        service_account: "kubernetes@kubernetes-411705.iam.gserviceaccount.com"
        credentials_json: ${{ secrets.GKE_SA_KEY }}
    #   env: 
    #     KUBE_CONFIG: ${{ runner.workspace }}/kubeconfig.yaml
    # Setup gcloud CLI
    # - uses: google-github-actions/setup-gcloud@v2
    #   with:
    #     version: 'latest'
      #   project_id: ${{ secrets.GKE_PROJECT }}
      # env:
      #   KUBE_CONFIG: ${{ runner.workspace }}/kubeconfig.yaml

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    # - run: |-
    #     gcloud components install gke-gcloud-auth-plugin
#        gcloud auth activate-service-account kubernetes@kubernetes-411705.iam.gserviceaccount.com --key-file=key.json

    # - uses: google-github-actions/get-gke-credentials@v2
    #   with:
    #     cluster_name: cluster-1
    #     location: asia-south1-a
    #     project_id: ${{ secrets.GKE_PROJECT }}
    #    credentials: ${{ secrets.GKE_SA_KEY }}
    - run: |-
        gcloud auth activate-service-account kubernetes@kubernetes-411705.iam.gserviceaccount.com --key-file="key.json"
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE" --project "${{ secrets.GKE_PROJECT }}"
    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        cat key.json | docker login -u _json_key --password-stdin https://gcr.io
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/tag/kustomize%2Fv5.3.0
        chmod u+x ./kustomize
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
#      run: kubectl apply -f deployment.yaml
      run: |-
        kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide